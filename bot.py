# import telebot
# from telebot import types

# from dao.subscribers import fetch_subscribers, save_subscriber, unsubscribe # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤

from bot.app import app

chat_id = '253052558'
chat_token = '5364460446:AAGxpCglqUunPCyEU5ziIMvHOtSedT9Cp_k'
tinka_token = "t.eDmKGfqdXmwDFW9279RZc3xhYLKpuu8IP7HNhMtvU7FgQ4gIu7fAhSArpOyrNGcIImz_aW_qDgcEbryMk34I-Q"

# bot = telebot.TeleBot(chat_token)

# @bot.message_handler(commands=['start'])
# def start(message):
#     chat_id = message.chat.id
#     us_name = message.from_user.first_name
#     us_sname = message.from_user.last_name
#     username = message.from_user.username
#     user_id = message.from_user.id
#     result = save_subscriber((chat_id, user_id, us_name, us_sname, username))
#     if result == 1:
#         bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –¢–µ–ø–µ—Ä—å, –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã –≤ —ç—Ç–æ—Ç —á–∞—Ç".format(message.from_user))
#     else:
#         bot.send_message(message.chat.id, text="–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞, –Ω–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è ;)".format(message.from_user))

# @bot.message_handler(commands=['stop'])
# def stop(message):
#     unsubscribe(message.from_user.id)
#     bot.send_message(message.chat.id, text="–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ Restart".format(message.from_user))


# @bot.my_chat_member_handler()
# def block(data):
#     if 'kicked' in  list(data.difference.get('status')):
#         unsubscribe(data.from_user.id)
#         print(f"""user '{data.from_user.id}' blocked bot""")



# @bot.callback_query_handler(func=lambda call: True)    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫
# def callback_inline_first(message):
#     info = message.data
#     comand = info.spli("/")[0]
#     signal_id = info.split("/")[1]
#     print(message)




# @bot.message_handler(content_types=['text'])
# def func(message):
#     if(message.text == 'accept'):
#         print('open position')
#     if(message.text == 'decline'):
#         print('decline signal')
#     if(message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
#         bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ —á–∏—Ç–∞–µ—à—å —Å—Ç–∞—Ç—å—é!)")
#     elif(message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
#         btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
#         back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
#         markup.add(btn1, btn2, back)
#         bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
    
#     elif(message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
#         bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏..")
    
#     elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
#         bot.send_message(message.chat.id, text="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å —á–∏—Ç–∞—Ç–µ–ª—è–º–∏")
    
#     elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
#         button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
#         markup.add(button1, button2)
#         bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
#     else:
#         bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")

# bot.polling(none_stop=True)



if __name__ == '__main__':
    app.run()